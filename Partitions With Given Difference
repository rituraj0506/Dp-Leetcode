#include <bits/stdc++.h> 
int mod=1e9+7;

int f(int i,int tar,vector<int> &nums,vector<vector<int>>&dp)
{
    if(i==0)
    {
        if(nums[0]==0&&tar==0) return 2;
        if(nums[0]==tar||tar==0) return 1;
        return 0;
    }
    if(dp[i][tar]!=-1) return dp[i][tar];
    int take=0;
    if(nums[i]<=tar)
    take=f(i-1,tar-nums[i],nums,dp);
    int nott=f(i-1,tar,nums,dp);
    return dp[i][tar]=(take+nott)%mod;
}

int countPartitions(int n, int d, vector<int> &arr) {
    int total=0;
    for(int i=0;i<n;i++)
    {
     total+=arr[i];   
    }
    if((total-d)<0||(total-d)%2!=0) return 0;
    int tar=(total-d)/2;
    vector<vector<int>>dp(n,vector<int>(tar+1,-1));
    return f(n-1,tar,arr,dp);
}
